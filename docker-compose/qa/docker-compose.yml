# Docker Compose file for EazyBank microservices

version: "3.8"

services:
  # MySQL Docker service for Accounts Microservice
  accountsdb:
    image: mysql
    container_name: accountsdb
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: accountsdb
    networks:
      - eazybank

  # MySQL Docker service for Loans Microservice
  loansdb:
    image: mysql
    container_name: loansdb
    ports:
      - "3308:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: loansdb
    networks:
      - eazybank

  # MySQL Docker service for Cards Microservice
  cardsdb:
    image: mysql
    container_name: cardsdb
    ports:
      - "3309:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cardsdb
    networks:
      - eazybank

  # RabbitMQ service for messaging
  #  rabbit:
  #    image: rabbitmq:4-management
  #    hostname: rabbitmq
  #    ports:
  #      - "5672:5672"    # AMQP port
  #      - "15672:15672"  # Management UI port
  #    healthcheck:
  #      test: rabbitmq-diagnostics check_port_connectivity
  #      interval: 10s
  #      timeout: 5s
  #      retries: 10
  #      start_period: 5s
  #    networks:
  #      - eazybank

  # Config Server service for centralized configuration management
  configserver:
    image: rahulmore1113/configserver:s10
    container_name: configserver-ms
    ports:
      - "8071:8071"
    #    depends_on:
    #      rabbit:
    #        condition: service_healthy
    healthcheck:
      test: curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    #    environment:
    #      SPRING_RABBITMQ_HOST: "rabbit"
    networks:
      - eazybank

    # Eureka Server service for service discovery
  eurekaserver:
    image: rahulmore1113/eurekaserver:s10
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"
      SPRING_PROFILES_ACTIVE: qa
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
    depends_on:
      configserver:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - eazybank


  # Accounts microservice
  accounts:
    image: rahulmore1113/accounts:s10
    container_name: accounts-ms
    ports:
      - "8080:8080"
    depends_on:
      accountsdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "accounts"
      SPRING_PROFILES_ACTIVE: qa
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      #      SPRING_RABBITMQ_HOST: "rabbit"
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: accountsdb
      SPRING_DATASOURCE_URL: jdbc:mysql://accountsdb:3306/accountsdb
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - eazybank

  # Loans microservice
  loans:
    image: rahulmore1113/loans:s10
    container_name: loans-ms
    ports:
      - "8090:8090"
    depends_on:
      loansdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "loans"
      SPRING_PROFILES_ACTIVE: qa
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      #      SPRING_RABBITMQ_HOST: "rabbit"
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: loansdb
      SPRING_DATASOURCE_URL: jdbc:mysql://loansdb:3306/loansdb
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - eazybank

  #  loans1:
  #    image: rahulmore1113/loans:s10
  #    container_name: loans1-ms
  #    ports:
  #      - "8091:8090"
  #    depends_on:
  #      loansdb:
  #        condition: service_healthy
  #      configserver:
  #        condition: service_healthy
  #    healthcheck:
  #      test: "curl --fail --silent localhost:8091/actuator/health/readiness | grep UP || exit 1"
  #      interval: 10s
  #      timeout: 5s
  #      retries: 10
  #      start_period: 10s
  #    environment:
  #      SPRING_APPLICATION_NAME: "loans"
  #      SPRING_PROFILES_ACTIVE: qa
  #      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
  ##      SPRING_RABBITMQ_HOST: "rabbit"
  #      MYSQL_ROOT_PASSWORD: root
  #      MYSQL_DATABASE: loansdb
  #      SPRING_DATASOURCE_URL: jdbc:mysql://loansdb:3306/loansdb
  #      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
  #    deploy:
  #      resources:
  #        limits:
  #          memory: 700m
  #    networks:
  #      - eazybank

  # Cards microservice
  cards:
    image: rahulmore1113/cards:s10
    container_name: cards-ms
    ports:
      - "9000:9000"
    depends_on:
      cardsdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:9000/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "cards"
      SPRING_PROFILES_ACTIVE: qa
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      #      SPRING_RABBITMQ_HOST: "rabbit"
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cardsdb
      SPRING_DATASOURCE_URL: jdbc:mysql://cardsdb:3306/cardsdb
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - eazybank

  # Gateway Server service for API Routing
  gatewayserver:
    image: rahulmore1113/gatewayserver:s10
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    depends_on:
      accounts:
        condition: service_healthy
      loans:
        condition: service_healthy
      cards:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"
      SPRING_PROFILES_ACTIVE: qa
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eurekaserver:8070/eureka/
      SPRING_DATA_REDIS_CONNECT_TIMEOUT: 2s
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 1s
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent localhost:8072/actuator/health/readiness | grep UP || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - eazybank

  # Redis Service For Resilience4J - RateLimiter Pattern Test
  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - eazybank

# Define the bridge network used by all services
networks:
  eazybank:
    driver: bridge
